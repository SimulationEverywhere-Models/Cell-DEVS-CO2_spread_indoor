CO2 Spread Computer Lab model User Manual

There are 4 versions of this model,
1. The base 2D model, this is in 2D and has no movement of the co2 sources (least complex, fastest runtime)
2. The base 3D model, this is in 3D and has no movement of the co2 sources (more complex, slower runtime)
3. The 2D model with movement, (medium complex, fast runtime)
4. The 3D model with movement, (most complex, slowest runtime)

The model uses an input json to take in the floorplan of the scenario, it further uses a series of numbers
defined in the code as type indicators for cells. These are:
AIR = -100  | this is the default cell type used in most floorplans, so any cell not specifically altered in the json will be cast as an air cell
CO2_SOURCE = -200
IMPERMEABLE_STRUCTURE = -300 | this is used to depict walls
DOOR = -400
WINDOW = -500
VENTILATION = -600
WORKSTATION = -700 | This is used in the base model as a placeholder for the co2 sources and in the movement models as their destinations
EXHAUST = -800 | unused at present; might be missing in some versions, not important

TO MAKE CHANGES:
All versions of the model support changes to the following elements in the input json without need for recompiling of the program
1. The floorplan of the scenario can be modified by modifying the input jsons cells field, for example: if the user wished to remove a window, they could simply find the cell in the json at those coordinates and delete it
2. Cell sizes can be adjusted by changing the cell_size field in the default_config of the json (line 16 approx.)
3. CO2 concentration increase per breath can be changed to indicate more strenuous activity by changing the co2_production value in the default_config in the json (line 15 approx.)
4. Start time for the state at which the workstations change into CO2 sources in the base models can be changed using the start_time (line 23 approx)
5. Number of states spent at the workstation can be adjusted using the time_active value in the default state of the json (line 22 approx)

Cadmium:
1. Navigate to the directory where you want to clone the simulator and open bash prompt 
2. Run (git clone https://github.com/SimulationEverywhere/Cell-DEVS-Cadmium-Simulation-Environment.git) 
3. After cloning, navigate to ./Cell-DEVS-Cadmium-Simulation-Environment and open another bash prompt
4. Run (git submodule update --init --recursive)
5. Navigate to ./Cadmium-Cell-DEVS-Models
4. Run (git clone https://github.com/SimulationEverywhere-Models/Cell-DEVS-CO2_spread_indoor.git)
5. Navigate to ../cadmium and open another bash prompt
6. Follow the steps bellow to run the simulations on the models.

TO RUN:
1. Compile using cmake:
			a) open the bash prompt in the Cell-DEVS-CO2_spread_computer_lab/<the model you want to run> folder and execute this command, cmake ./
			b) this will create a makefile in the folder, now execute make
			c) this will create the executable co2_lab in the bin folder
2. Once compiled all changes that are not in the hpp or cpp files do not require recompilation
3. Create a folder in the same directory as the executable, name it results
4. Run the simulation by entering the bin folder, opening a bash prompt and using the command ./co2_lab followed by the path to the json and an optional number of timesteps, e.g ./co2_lab ../config/test.json 
																						or ./co2_lab ../config/test.json 500

5. The results folder will be populated with 2 files once the simulation starts running, output_messages.txt and output_state.txt

ALTERNATE COMPILE INSTRUCTION:
here is the manual command for the compilation
g++ -g -I ../../cadmium/include -I ../../cadmium/json/include -std=c++17 -o CO2 co2_main.cpp co2_coupled.hpp co2_lab_cell.hpp

please change the relative filepaths after the two -I (include flags) as required
